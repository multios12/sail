# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: sail CI

on:
  pull_request:
    types: [closed]
    branches:
      - release

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
    - uses: actions/checkout@v3

    # build node.js
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        cache-dependency-path: ./front/yarn.lock  
    - name: yarn build
      run: |
        yarn --cwd ./front
        yarn --cwd ./front build
        cp ./front/dist/* ./server/static/ -R
      env:
        HTML: index.html

    # build go
    - uses: actions/setup-go@v3
    - run: go build -ldflags="-s -w" -trimpath -o ../dist/
      working-directory: server
      env:
        GOOS: linux
        GOARCH: amd64

    # create Release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.pull_request.title }}
        release_name: ${{ github.event.pull_request.title }}
        body: ${{ github.event.pull_request.body }}
        draft: true
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release_target.txt
        asset_name: release_target.txt
        asset_content_type: text/plain
